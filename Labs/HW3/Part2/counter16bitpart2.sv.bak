module counter16bitpart2(input logic CLK,CLR,T,output logic [15:0]Q);
    always @(posedge CLK)
	begin
		if (CLR == 0)
		begin
			Q <= 0;
		end
		else
		begin
			Q <= (T) ?  (Q + 1) : Q;
		end
    end
endmodule

module counter16bitpart2_testbench();
	logic [15:0]Q;
	logic CLK,CLR,T;
	integer i;
	counter16bitpart2 DUT(CLK,CLR,T,Q);
	initial
	begin
		$display("Toggle	   Q	mod((i >> 1),  65536)	i");
	end
	initial
	begin
		CLK = 0;
		i = 1;
		T = 1'b1;
		CLR = 1'b1;
		$monitor("%b	%d	%d	%d",T,Q,((i >> 1) % 65536), i);
		assert(((i >> 1) % 65536)  == Q);
		repeat (4)//65536*2=131072
		begin
			#1 CLK = !CLK;
			i++;
			//wait(((i >> 1) % 65537)  == {Q3,Q2,Q1,Q0});
		end
	end
endmodule